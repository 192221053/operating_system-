#include <stdio.h>
#include <stdlib.h>
struct Process {
    int id;
    int burstTime;
};
void executeProcess(struct Process *process) {
    printf("Executing process %d (Burst Time: %d)\n", process->id, process->burstTime);
}
struct Process* findShortestJob(struct Process *processes, int numProcesses) {
    if (numProcesses <= 0) {
        return NULL;
    }
    struct Process *shortestJob = &processes[0];
    for (int i = 1; i < numProcesses; ++i) {
        if (processes[i].burstTime < shortestJob->burstTime) {
            shortestJob = &processes[i];
        }
    }
    return shortestJob;
}
int main() {
    struct Process processes[] = {
        {1, 6},
        {2, 8},
        {3, 3},
        {4, 7},
        {5, 4}
    };
    int numProcesses = sizeof(processes) / sizeof(processes[0]);
    for (int i = 0; i < numProcesses; ++i) {
        struct Process *nextJob = findShortestJob(processes, numProcesses);
        if (nextJob != NULL) {
            executeProcess(nextJob);
            *nextJob = processes[numProcesses - 1];
            numProcesses--;
        }
    }
    printf("All processes executed.\n");
    return 0;
}
